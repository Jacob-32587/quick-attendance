@base=http://0.0.0.0:8080/quick-scan-api

###
# @name=CreateAccount
POST {{base}}/account HTTP/1.1
Content-Type: application/json

{
    "username": "FooBar",
    "email": "foo@bar.com",
    "first_name": "Zab",
    "last_name": "Baz",
    "password": "FooBarZaa"
}

###
# @name=UpdateAccount
PUT {{base}}/auth/account HTTP/1.1
Authorization: Bearer {{auth_token}}
Content-Type: application/json

{
    "username": "Normal Name",
    "email": "normal@guy.com",
    "first_name": "Normal",
    "last_name": "Man"
}

###
# @name=CreateAccount2
POST {{base}}/account HTTP/1.1
Content-Type: application/json

{
    "username": "FooBarZaa",
    "email": "foo@barzaa.com",
    "first_name": "Baz",
    "password": "ZabBar123"
}

###
# @name=GetAccount
GET {{base}}/auth/account HTTP/1.1
Authorization: Bearer {{auth_token}}

###
# @name=LoginAccount
POST {{base}}/account/login HTTP/1.1
Content-Type: application/json

{
    "email": "foo@bar.com",
    "password": "FooBarZaa"
}

# @lang=lua
> {%
    local body = vim.json.decode(response.body)
    client.global.set("auth_token", body.jwt);
%}

###
# @name=CreateGroup1
POST {{base}}/auth/group HTTP/1.1
Authorization: Bearer {{auth_token}}
Content-Type: application/json

{
    "group_name": "FooBarGroup",
    "group_description": "This is a group that contains some foos and even bars but absolutely no zaas.",
    "unique_id_settings": {
        "prompt_message": "You must enter you unique foo or bar identification. Remember this will be exactly 8 characters, if you are a manager this is not required.",
        "min_length": 8,
        "max_length": 8,
        "required_for_managers": false
    }
}

###
# @name=ListGroups
GET {{base}}/auth/group/list HTTP/1.1
Authorization: Bearer {{auth_token}}

###
# @name=InviteToGroup
PUT {{base}}/auth/group/invite HTTP/1.1
Authorization: Bearer {{auth_token}}
Content-Type: application/json

{
    "usernames": ["FooBarZaa"],
    "group_id": "0195795b-9a9a-74ac-82be-df55ca304a7f"
}

###
# @name=CorsTest
OPTIONS {{base}}/account HTTP/1.1
